# Only stuff that actually tests the platform should be here: stage 1 and 2.
name: Plugin CI

on:
  workflow_call:

jobs:
  plugin-argos:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04

        # 2024/08/26: Test the earliest and latest supported version, to speed
        # up CI.
        python-version:
          - 3.8
          - 3.11

        function:
          - physics_engines_test
          - vc_test
          - cmdline_test
          - bc_univar_sanity_test
          - stage1_univar_test
          - stage2_univar_test
          - stage3_univar_test
          - stage4_univar_test
          - stage5_univar_test
          - bc_bivar_sanity_test
          - stage1_bivar_test
          - stage2_bivar_test
          - stage3_bivar_test
          - stage5_bivar_test

        exclude:
          - python-version: 3.11
            os: ubuntu-20.04

          - python-version: 3.8
            os: ubuntu-22.04

        # We only run a few OSX tests, because most of the ARGoS tests don't
        # rely on OS-specific things, and testing them adds marginal confidence.
        include:
          - os: macos-13
            function: bc_univar_sanity_test

          - os: macos-13
            function: stage1_univar_test

          - os: macos-13
            function: stage2_univar_test

          - os: macos-13
            function: bc_bivar_sanity_test

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sierra-setup
      - uses: ./.github/actions/sample-project-setup
        with:
          platform: argos

      - uses: nick-fields/retry@v2
        name: Integration tests
        with:
          timeout_minutes: 3600
          max_attempts: 3
          command: ./scripts/argos-integration-tests.sh -f ${{ matrix.function }} -e hpc.local

      - uses: actions/upload-artifact@v4
        with:
          name: ci-platform-argos-${{ matrix.function }}-${{ runner.os }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  plugin-ros1robot:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        python-version:
          - 3.8

        function:
          - bc_univar_sanity_test
          - stage1_test

        os:
          - ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sierra-setup
      - uses: ./.github/actions/sample-project-setup
        with:
          platform: ros1robot
          rosdistro: noetic

      - name: Integration tests
        run: |
          ./scripts/ros1robot-integration-tests.sh -f ${{ matrix.function }} -e hpc.local

      - uses: actions/upload-artifact@v4
        with:
          name: ci-platform-ros1robot-${{ matrix.function }}-${{ runner.os }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  plugin-ros1gazebo:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        # You CANNOT use python 3.9 with ubuntu 20.04 with ROS, because 3.8 is
        # the system python and things just don't work otherwise...
        python-version:
          - 3.8

        function:
          - bc_univar_sanity_test
          - stage2_univar_test

        os:
          - ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sierra-setup
      - uses: ./.github/actions/sample-project-setup
        with:
          platform: ros1gazebo
          rosdistro: noetic

      - name: Integration tests
        run: |
          ./scripts/ros1gazebo-integration-tests.sh -f ${{ matrix.function }} -e hpc.local

      - uses: actions/upload-artifact@v4
        with:
          name: ci-platform-ros1gazebo-${{ matrix.function }}-${{ runner.os }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error

  plugin-exec-env:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    strategy:
      matrix:
        # You CANNOT use python 3.9 with ubuntu 20.04 with ROS, because 3.8 is
        # the system python and things just don't work otherwise...
        python-version:
          - 3.8

        platform:
          - argos
          - ros1gazebo

        exec-env:
          - hpc.adhoc
          - hpc.slurm

        os:
          - ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sierra-setup
      - uses: ./.github/actions/sample-project-setup
        if: matrix.platform == 'argos'
        with:
          platform: argos

      - uses: ./.github/actions/sample-project-setup
        if: matrix.platform == 'ros1gazebo'
        with:
          platform: ros1gazebo
          rosdistro: noetic

      - uses: ./.github/actions/slurm-setup
        if: matrix.exec-env == 'hpc.slurm'

      - name: Integration Tests
        if: matrix.platform != ''
        run: |
          ./scripts/${{ matrix.platform }}-integration-tests.sh -f stage2_univar_test -e ${{ matrix.exec-env }}

      - uses: actions/upload-artifact@v4
        with:
          name: ci-${{ matrix.platform }}-${{ matrix.exec-env }}-${{ runner.os }}-${{ matrix.python-version }}-coverage
          path: .coverage.*
          include-hidden-files: true
          if-no-files-found: error
