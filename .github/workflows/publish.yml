name: Publishing

on:
  push:
    branches:
      - devel
      - master

jobs:
  test-pypi:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/devel'
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sierra-setup
      - name: Build package
        run: |
          pip3 install build setuptools
          python3 -m build

      - name: Set tag
        run: echo "RELEASE_TAG=v$(python3 setup.py --version).beta" >> $GITHUB_ENV

      - name: Github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ env.RELEASE_TAG }}
          prerelease: true
          title: "Development releease ${{ env.RELEASE_TAG }}"

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

  pypi:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/sierra-setup
      - name: Build package
        run: |
          pip3 install build setuptools
          python3 -m build

      - name: Set tag
        run: echo "RELEASE_TAG=v$(python3 setup.py --version)" >> $GITHUB_ENV

      - name: Github release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: ${{ env.RELEASE_TAG }}
          prerelease: false
          title: "Release ${{ env.RELEASE_TAG }}"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
