name: 'Setup SIERRA sample project'
description: 'Setup SIERRA project for CI and testing'
inputs:
  platform:  # id of input
    description: 'The SIERRA platform to setup for'
    required: true
  rosdistro:
    description: 'The version of ROS to test with'
    default: 'noetic'

runs:
  using: 'composite'
  steps:
    ############################################################################
    # Common setup
    ############################################################################
    - name: Setup python (all OSes)
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Clone sample project
      shell: bash
      working-directory: ${{ github.workspace }} # Needed to match with scripts/argos-integration-tests.sh

      run: |
        if [ ! -d sierra-sample-project ]; then
        git clone https://github.com/jharwell/sierra-sample-project.git
        cd sierra-sample-project
        else
        cd sierra-sample-project
        git pull
        fi
        git checkout devel

    - name: Get number of CPU cores
      uses: SimenB/github-actions-cpu-cores@v1
      id: cpu-cores

    - uses: kenchan0130/actions-system-info@master
      id: system-info

    - name: Cache build files
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}-${{ steps.system-info.outputs.release }}-build-objects
        verbose: 0

    ############################################################################
    # ARGoS setup
    ############################################################################
    - uses: nick-fields/retry@v2
      name: Install ARGoS deps (OSX)
      if: runner.os == 'macOS'
      with:
        timeout_minutes: 10000
        max_attempts: 3
        shell: bash
        command: |
          # 2023/01/16: Caching doesn't work reliably, for reasons unknown :-(.
          #
          # The {xquartz, mactex, qt} deps are not required as long as the ARGoS
          # integration tests for OSX don't run stage 4+ or try to do video
          # capture. Installing them takes ~30 min in github actions, so cutting
          # this particular corner saves a TON of time.
          #
          # Note that by omitting Xquartz you MUST also omit Qt, otherwise CI
          # fails (I think ARGoS segfaults).
          brew install pkg-config cmake libpng freeimage lua

    - name: Install and cache ARGoS dependencies (Linux)
      if: runner.os == 'Linux'
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: libfreeimage-dev libfreeimageplus-dev qtbase5-dev freeglut3-dev libxi-dev libxmu-dev liblua5.3-dev lua5.3 libgraphviz-dev ccache
        version: ${{ runner.os }}

    - name: Install ARGoS
      if: inputs.platform == 'argos'
      shell: bash
      run: |
        git clone https://github.com/ilpincy/argos3.git
        cd argos3

        mkdir -p build && cd build
        cmake \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DARGOS_DOCUMENTATION=OFF \
          ../src
        make -j ${{ steps.cpu-cores.outputs.count }}
        sudo make install

    - name: Build SIERRA project for ARGoS
      if: inputs.platform == 'argos'
      shell: bash
      working-directory: ${{ github.workspace }} # Needed to match with scripts/argos-integration-tests.sh

      run: |
        cd sierra-sample-project/argos
        mkdir -p build && cd build
        cmake \
          -DCMAKE_C_COMPILER_LAUNCHER=ccache \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache \
          -DARGOS_INSTALL_DIR=/usr/local \
          ..
        make -j ${{ steps.cpu-cores.outputs.count }}

    ############################################################################
    # ROS1+Gazebo setup
    ############################################################################
    - name: Install ROS1 platform dependency
      if: inputs.platform == 'ros1gazebo'
      uses: ros-tooling/setup-ros@v0.7
      with:
        required-ros-distributions: ${{ inputs.rosdistro }}

    - name: Install SIERRA ROSbridge system dependencies (Linux)
      if: inputs.platform == 'ros1gazebo'
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: ros-${{ inputs.rosdistro }}-desktop-full ros-${{ inputs.rosdistro }}-turtlebot3-description ros-${{ inputs.rosdistro }}-turtlebot3-msgs ros-${{ inputs.rosdistro }}-turtlebot3-gazebo ros-${{ inputs.rosdistro }}-turtlebot3-bringup python${{ matrix.python-version }} python${{ matrix.python-version }}-dev python${{ matrix.python-version }}-venv python3-apt python3-cairo intltool python3-wheel python3-rospkg python3-empy
        version: ${{ runner.os }}

    - name: Install SIERRA ROSbridge python dependencies (Linux)
      if: inputs.platform == 'ros1gazebo'
      shell: bash
      run: |
        # 2023/1/18: You still need install these even after installing stuff
        # with apt AND if the sysem python matches your current python. I don't
        # know why.
        pip3 install empy \
                     rospkg \
                     wheel \
                     pyparsing \
                     pyqt5 \
                     pysip \
                     numpy \
                     matplotlib \
                     pyyaml \
                     psutil \
                     defusedxml \
                     pyparsing \
                     pydev \
                     pyopengl \
                     opencv-python \
                     catkin_tools

    - name: Install SIERRA ROSBridge dependency (ubuntu)
      if: inputs.platform == 'ros1gazebo'
      shell: bash
      run: |
        source /opt/ros/${{ inputs.rosdistro }}/setup.bash

        git clone https://github.com/jharwell/sierra_rosbridge.git
        cd sierra_rosbridge
        git checkout devel
        catkin init
        catkin config --extend /opt/ros/${{ inputs.rosdistro }}
        catkin config --install -DCMAKE_INSTALL_PREFIX=$HOME/.local
        catkin build

    ############################################################################
    # ROS1+Robot setup
    ############################################################################

    # None needed for the moment--stage 1 XML generation only.
