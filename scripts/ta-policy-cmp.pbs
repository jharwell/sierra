#!/bin/bash -l
#PBS -l walltime=4:00:00,nodes=50:ppn=8,pmem=2500mb
#PBS -m abe
#PBS -M harwe006@umn.edu

################################################################################
# Setup Simulation Environment                                                 #
################################################################################
# Set paths
FORDYCA=$HOME/git/fordyca
SIERRA=$HOME/git/sierra

# Initialize modules
source /home/gini/shared/swarm/bin/build-env-setup.sh 2>&1 /dev/null

# Add ARGoS libraries to system library search path, since they are in a
# non-standard location
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SWARM_ROOT/$MSICLUSTER/lib/argos3

# Set ARGoS library search path. Must contain both the ARGoS core libraries path
# AND the fordyca library path.
export ARGOS_PLUGIN_PATH=$SWARM_ROOT/$MSICLUSTER/lib/argos3:$FORDYCA/build/lib

# Setup logging (maybe compiled out and unneeded, but maybe not)
export LOG4CXX_CONFIGURATION=$FORDYCA/log4cxx.xml

# From MSI docs: transfers all of the loaded modules to the compute nodes (not
# inherited from the master/launch node when using GNU parallel)
export PARALLEL="--workdir . --env PATH --env LD_LIBRARY_PATH --env
LOADEDMODULES --env _LMFILES_ --env MODULE_VERSION --env MODULEPATH --env
MODULEVERSION_STACK --env MODULESHOME --env OMP_DYNAMICS --env
OMP_MAX_ACTIVE_LEVELS --env OMP_NESTED --env OMP_NUM_THREADS --env
OMP_SCHEDULE --env OMP_STACKSIZE --env OMP_THREAD_LIMIT --env OMP_WAIT_POLICY
--env ARGOS_PLUGIN_PATH --env LOG4CXX_CONFIGURATION"

################################################################################
# Begin Experiments                                                            #
################################################################################
DIST_TYPES1=(SS DS)
DIST_TYPES2=(QS) # These require square arenas (nest is in the middle)
CONTROLLERS=(depth1.BITD_DPO
             depth2.BIRTD_DPO)
SIZES=(8 16 32 64)

OUTPUT_ROOT=$HOME/exp/ta-policy-cmp
BASE_CMD="python3 sierra.py \
                  --template-config-file=$SIERRA/templates/ideal.argos \
                  --n-sims=16\
                  --n-physics-engines=1\
                  --n-threads=1\
                  --exec-method=local\
                  --named-exp-dirs\
                  --time-setup=time_setup.T10000\
                  --perf-measures=ss,so,sp"

cd $HOME/git/sierra

# # GO GO Power Rangers!
# for c in "${CONTROLLERS[@]}"
# do
#     for dist in "${DIST_TYPES1[@]}"
#     do
#         for size in "${SIZES[@]}"
#         do
#             $BASE_CMD --generator=${c}.${dist}12x6 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=10  --sierra-root=$OUTPUT_ROOT/b10-${size}
#             $BASE_CMD --generator=${c}.${dist}12x6 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=20  --sierra-root=$OUTPUT_ROOT/b20-${size}
#             $BASE_CMD --generator=${c}.${dist}12x6 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=40  --sierra-root=$OUTPUT_ROOT/b40-${size}

#             $BASE_CMD --generator=${c}.${dist}24x12 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=30  --sierra-root=$OUTPUT_ROOT/b30-${size}
#             $BASE_CMD --generator=${c}.${dist}24x12 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=60  --sierra-root=$OUTPUT_ROOT/b60-${size}
#             $BASE_CMD --generator=${c}.${dist}24x12 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=120  --sierra-root=$OUTPUT_ROOT/b120-${size}
#         done;
#     done;
#     for dist in "${DIST_TYPES2[@]}"
#     do
#         for size in "${SIZES[@]}"
#         do
#             $BASE_CMD --generator=${c}.${dist}16x16 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=10  --sierra-root=$OUTPUT_ROOT/b10-${size}
#             $BASE_CMD --generator=${c}.${dist}16x16 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=20  --sierra-root=$OUTPUT_ROOT/b20-${size}
#             $BASE_CMD --generator=${c}.${dist}16x16 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=40  --sierra-root=$OUTPUT_ROOT/b40-${size}

#             $BASE_CMD --generator=${c}.${dist}32x32 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=30  --sierra-root=$OUTPUT_ROOT/b30-${size}
#             $BASE_CMD --generator=${c}.${dist}32x32 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=60  --sierra-root=$OUTPUT_ROOT/b60-${size}
#             $BASE_CMD --generator=${c}.${dist}32x32 --batch-criteria=ta_policy_set.All.Z${size} --n-blocks=120  --sierra-root=$OUTPUT_ROOT/b120-${size}
#         done;
#     done;
# done;

# Generate comparison graphs (a valid batch criteria still needed to correctly
# generate graph labels)
for size in "${SIZES[@]}"
do
    $BASE_CMD --generator=depth1.BITD_DPO.SS12x6\
              --batch-criteria=ta_policy_set.All.Z16\
              --sierra-root=$OUTPUT_ROOT/b10-${size}\
              --pipeline 5 \
              --inter-batch-controllers=depth1.BITD_DPO,depth2.BIRTD_DPO

    $BASE_CMD --generator=depth1.BITD_DPO.SS12x6\
              --batch-criteria=ta_policy_set.All.Z16\
              --sierra-root=$OUTPUT_ROOT/b20-${size}\
              --pipeline 5\
              --inter-batch-controllers=depth1.BITD_DPO,depth2.BIRTD_DPO

    $BASE_CMD --generator=depth1.BITD_DPO.SS12x6\
              --batch-criteria=ta_policy_set.All.Z16\
              --sierra-root=$OUTPUT_ROOT/b40-${size}\
              --pipeline 5\
              --inter-batch-controllers=depth1.BITD_DPO,depth2.BIRTD_DPO

    $BASE_CMD --generator=depth1.BITD_DPO.SS12x6\
              --batch-criteria=ta_policy_set.All.Z16\
              --sierra-root=$OUTPUT_ROOT/b30-${size}\
              --pipeline 5 \
              --inter-batch-controllers=depth1.BITD_DPO,depth2.BIRTD_DPO

    $BASE_CMD --generator=depth1.BITD_DPO.SS12x6\
              --batch-criteria=ta_policy_set.All.Z16\
              --sierra-root=$OUTPUT_ROOT/b60-${size}\
              --pipeline 5\
              --inter-batch-controllers=depth1.BITD_DPO,depth2.BIRTD_DPO

    $BASE_CMD --generator=depth1.BITD_DPO.SS12x6\
              --batch-criteria=ta_policy_set.All.Z16\
              --sierra-root=$OUTPUT_ROOT/b120-${size}\
              --pipeline 5\
              --inter-batch-controllers=depth1.BITD_DPO,depth2.BIRTD_DPO

done;
