#!/bin/bash -l
#PBS -l walltime=4:00:00,nodes=50:ppn=8,pmem=2500mb
#PBS -m abe
#PBS -M harwe006@umn.edu

################################################################################
# Setup Simulation Environment                                                 #
################################################################################

# Initialize modules
source /home/gini/shared/swarm/bin/msi-env-setup.sh

# Add ARGoS libraries to system library search path, since they are in a
# non-standard location
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$SWARM_ROOT/$MSICLUSTER/lib/argos3

# Set ARGoS library search path. Must contain both the ARGoS core libraries path
# AND the fordyca library path.
export ARGOS_PLUGIN_PATH=$SWARM_ROOT/$MSICLUSTER/lib/argos3:$HOME/git/fordyca/build/lib

# Setup logging (maybe compiled out and unneeded, but maybe not)
export LOG4CXX_CONFIGURATION=$HOME/git/fordyca/log4cxx.xml

# From MSI docs: transfers all of the loaded modules to the compute nodes (not
# inherited from the master/launch node when using GNU parallel)
export PARALLEL="--workdir . --env PATH --env LD_LIBRARY_PATH --env
LOADEDMODULES --env _LMFILES_ --env MODULE_VERSION --env MODULEPATH --env
MODULEVERSION_STACK --env MODULESHOME --env OMP_DYNAMICS --env
OMP_MAX_ACTIVE_LEVELS --env OMP_NESTED --env OMP_NUM_THREADS --env
OMP_SCHEDULE --env OMP_STACKSIZE --env OMP_THREAD_LIMIT --env OMP_WAIT_POLICY
--env ARGOS_PLUGIN_PATH --env LOG4CXX_CONFIGURATION"

################################################################################
# Begin Experiments                                                            #
################################################################################
NSIMS=4
CONTROLLERS=(depth0.CRW depth0.DPO depth1.BITD_DPO depth2.BIRTD_DPO)
OUTPUT_ROOT=$HOME/exp/sc3
DENSITY=5p0 # 81920 robots max
N_BLOCKS=81920
BLOCK_DIST=PL
TIME=1000
BASE_CMD="python3 sierra.py \
                  --sierra-root=$OUTPUT_ROOT \
                  --template-input-file=$HOME/git/sierra/templates/2020-journal-sc3.argos \
                  --n-sims=$NSIMS\
                  --physics-n-engines=16\
                  --pipeline 1 2 3 4 --exp-graphs=inter\
                  --project=fordyca\
                  --hpc-env=hpc_local \
                  --exp-overwrite \
                  --time-setup=time_setup.T${TIME}"

cd $HOME/git/sierra

# Scalability/emergence analysis
if [ "$TASK" == "scalability" ] || [ "$TASK" == "emergence" ]
then
    for c in "${CONTROLLERS[@]}"
    do
        $BASE_CMD --scenario=${BLOCK_DIST}.320x320 \
                  --batch-criteria population_density.CD${DENSITY}.I16\
                  --controller=${c} \
                  --n-blocks=${N_BLOCKS}

    done
fi

# Flexibility analysis
if [ "$TASK" == "flexibility" ]
then
    for c in "${CONTROLLERS[@]}"
    do
        $BASE_CMD --scenario=${BLOCK_DIST}.320x320 \
                  --batch-criteria population_density.CD${DENSITY}.I82 temporal_variance.MSawtooth\
                  --controller=${c}\
                  --n-blocks=${N_BLOCKS}

        $BASE_CMD --scenario=${BLOCK_DIST}.320x320 \
                  --batch-criteria population_density.CD${DENSITY}.I82 temporal_variance.MSine\
                  --controller=${c}\
                  --n-blocks=${N_BLOCKS}
    done
fi

# Robustness analysis
if [ "$TASK" == "robustness" ]
then
    for c in "${CONTROLLERS[@]}"
    do
        $BASE_CMD --scenario=${BLOCK_DIST}.320x320 \
                  --batch-criteria population_density.CD${DENSITY}.I82 population_dynamics.C3.F2p0.Dp001.Mp001\
                  --controller=${c} \
                  --n-blocks=${N_BLOCKS}

        $BASE_CMD --scenario=${BLOCK_DIST}.320x320 \
                  --batch-criteria population_density.CD${DENSITY}.I82 saa_noise.all.C5\
                  --controller=${c} \
                  --n-blocks=${N_BLOCKS}
    done
fi

# Generate comparison graphs
if [ "$TASK" == "comp" ]
   then
   STAGE5_CMD="python3 sierra.py \
                  --project=fordyca\
                  --pipeline 5\
                  --sierra-root=$OUTPUT_ROOT\
                  --controllers-list depth0.CRW,depth0.DPO,depth1.BITD_DPO,depth2.BIRTD_DPO"

   # Generate scalability/emergence comparison graphs
   $STAGE5_CMD --batch-criteria population_density.CD${DENSITY}.I82\
               --bc-univar

   # Generate flexibility comparison graphs
   $STAGE5_CMD --batch-criteria population_density.CD${DENSITY}.I82 temporal_variance.MSawtooth\
               --bc-bivar

   $STAGE5_CMD --batch-criteria population_density.CD${DENSITY}.I82 temporal_variance.MSine\
               --bc-bivar


   # Generate robustness comparison graphs
   $STAGE5_CMD --batch-criteria population_density.CD${DENSITY}.I82 population_dynamics.C3.F2p0.Dp001.Mp001\
               --bc-bivar

   $STAGE5_CMD --batch-criteria population_density.CD${DENSITY}.I82 saa_noise.all.C5\
               --bi-bivar
fi
